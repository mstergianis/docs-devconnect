---
title: Installing Developer Connect on VMware Tanzu Application Service for VMs
owner: DevConnect
---

<strong><%= modified_date %></strong>

This topic describes how to install <%= vars.product_full %> on <%= vars.app_runtime_full %> (<%= vars.app_runtime_abbr %>).

## <a id="Overview"></a> Overview

To install <%= vars.product_short %> on <%= vars.app_runtime_abbr %>
you must configure an app manifest and variable file for <%= vars.product_short %>.
After you configure the files, you must push the <%= vars.product_short %> app to <%= vars.app_runtime_abbr %>.

To install <%= vars.product_short %> on Kubernetes instead,
follow the procedure in
[kubernetes-deployment](https://github.com/pivotal/DevConnect/blob/master/kubernetes-deployment) in GitHub.

To install <%= vars.product_short %> on <%= vars.app_runtime_abbr %>:

1. [Create the App Manifest](#manifest)
1. [Create a Variables Configuration File](#config)
1. [Push the <%= vars.product_short %> App](#push)

## <a id="prereq"></a>Prerequisites

Before you install <%= vars.product_short %>, you must have:

- Followed the procedures in [Preparing <%= vars.product_full %> for Deployment](./preparing.html).
- A <%= vars.app_runtime_abbr %> deployment.
- Access to the Tanzu Network Registry. This is a private container image registry provided by VMware.
- A SQL database. You can use the VMware Tanzu SQL [MySQL] tile for a database.
  See [VMware Tanzu SQL [MySQL]](https://docs.pivotal.io/p-mysql/).

## <a id="manifest"></a> Create the App Manifest

<%# The following is our speculation on how Alana will deploy DevConnect.
It should be updated after this story, https://www.pivotaltracker.com/story/show/168938874
to reflect how to actually deploy the packaged DevConnect.  %>

You must create an app manifest file to `cf push` the <%= vars.product_short %> app.<br><br>
To create the manifest file:


1. Download and unzip the <%= vars.product_short %> product file from
[<%= vars.product_network %>](https://network.pivotal.io/products/developer-connect/).

1. Create a manifest file named `devconnect-manifest.yml` at the root level of the
<%= vars.product_short %> directory.


1. Add the following contents to the manifest file:

    ```
    ---
    applications:
      - name: devconnect
        memory: 1G
        instances: 1
        routes:
        - route: ((devconnect-route))
        docker:
          image: ((devconnect-image-location))
          username: ((devconnect-image-registry-username))
        command: ./devconnect-linux
        env:
          DEVCONNECT_AUTH_CLIENT_ID: ((devconnect-auth-client-id))
          DEVCONNECT_AUTH_CLIENT_SECRET: ((devconnect-auth-client-secret))
          DEVCONNECT_AUTH_BASE_URL: ((devconnect-auth-base-url))
          DEVCONNECT_SESSION_SECRET: ((session-secret))
          DEVCONNECT_DB_TYPE: ((db-type))
          DEVCONNECT_DB_HOST: ((db-host))
          DEVCONNECT_DB_PORT: ((db-port))
          DEVCONNECT_DB_USER_NAME: ((db-username))
          DEVCONNECT_DB_NAME: ((db-name))
          DEVCONNECT_DB_PASSWORD: ((db-password))
          DEVCONNECT_DB_MAX_CONNECTIONS: ((db-max-connections))
          DEVCONNECT_ENTITLEMENTS_CONFIG_STRING: ((devconnect-entitlements-config))
    ```

## <a id="config"></a> Create a Variables Configuration File

You must create a configuration file to populate variable interpolation values
for <%= vars.product_short %>.

To create and configure the configuration file:

1. Create a configuration file named `devconnect-vars.yml` at the root level of the
<%= vars.product_short %> directory.
1. Add credentials information to the configuration file.
  See [Add <%= vars.product_short %> and Database Credentials](#config-creds) below.
1. Add an entitlements config to the configuration file.
  See [Add the Entitlements Config](#config-entitle) below.

For an example of a configuration file, see [Example Configuration File](#example-config) below.

### <a id="config-creds"></a> Add <%= vars.product_short %> and Database Credentials

To add and configure credentials for <%= vars.product_short %> and a backing database:

1. Add the following credentials to the configuration file:

    ```
    ---
    devconnect-image-location: registry.pivotal.io/developer-connect/developer-connect
    devconnect-image-registry-username: DEVCONNECT-REGISTRY-USERNAME
    devconnect-route: DEVCONNECT-ROUTE
    devconnect-auth-client-id: LOGIN-ID
    devconnect-auth-client-secret: LOGIN-SECRET
    devconnect-auth-base-url: BASE-URL
    session-secret: SESSION-SECRET
    ```

    Where:

    <table>
      <tr>
        <th width=35%>Placeholder</th>
        <th>Value</th>
      </tr>

      <tr>
        <td><code>DEVCONNECT-REGISTRY-USERNAME</code></td>
        <td>Your username for Tanzu Network Registry.
             This is the username you use to log in to <%= vars.product_network %>.</td>
      </tr>

      <tr>
        <td><code>DEVCONNECT-ROUTE</code></td>
        <td>The route you created to access the <%= vars.product_short %> server.</td>
      </tr>

      <tr>
        <td><code>LOGIN-ID</code></td>
        <td>The login client ID you recorded in
          <a href="./preparing.html#idp">Configure the <%= vars.product_short %> IdP</a>.
          By default, this is <code>devconnect&#95;login&#95;client</code>.</td>
      </tr>

      <tr>
        <td><code>LOGIN-SECRET</code></td>
        <td>The login client secret you recorded in
          <a href="./preparing.html#idp">Configure the <%= vars.product_short %> IdP</a>.</td>
      </tr>

      <tr>
        <td><code>BASE-URL</code></td>
        <td>The authorization base URL you recorded in
          <a href="./preparing.html#idp">Configure the <%= vars.product_short %> IdP</a>.</td>
      </tr>

      <tr>
        <td><code>SESSION-SECRET</code></td>
        <td>This is an arbitrary string used to encrypt session cookies.</td>
      </tr>
      </table>

1. Append the following database credentials to the configuration file:

    ```
    db-type: DATABASE-TYPE
    db-host: DATABASE-HOST
    db-port: DATABASE-PORT
    db-username: DATABASE-USERNAME
    db-name: DATABASE-NAME
    db-password: DATABASE-PASSWORD
    db-max-connections: DATABASE-CONNECTIONS
    ```
    Where:

    <table>
      <tr>
        <th width=25%>Placeholder</th>
        <th>Value</th>
      </tr>


        <tr>
          <td><code>DATABASE-TYPE</code></td>
          <td>This is the SQL database you are using with <%= vars.product_short %>.
             <%= vars.product_short %> supports <code>mysql</code> and <code>postgres</code>.</td>
        </tr>

        <tr>
          <td><code>DATABASE-HOST</code></td>
          <td>The host for your SQL database.</td>
        </tr>

        <tr>
          <td><code>DATABASE-PORT</code></td>
          <td>The port number for your SQL database.</td>
        </tr>

        <tr>
          <td><code>DATABASE-USERNAME</code></td>
          <td>The username for your SQL database.</td>
        </tr>

        <tr>
          <td><code>DATABASE-NAME</code></td>
          <td>The name of your SQL database.</td>
        </tr>

        <tr>
          <td><code>DATABASE-PASSWORD</code></td>
          <td>The password for your SQL database.</td>
        </tr>

        <tr>
          <td><code>DATABASE-CONNECTIONS</code></td>
          <td>The maximum number of connections to the database that you want <%= vars.product_short %> to create.
            Set this value to be lower than the maximum number of concurrent connections that the database permits.
            The default value is <code>3</code>.</td>
        </tr>
    </table>

## <a id="push"></a>Push the <%= vars.product_short %> App

To push the <%= vars.product_short %> app:

1. Target your CAPI endpoint by running:

    ```
    cf api CF-API-ENDPOINT
    ```
1. Log in to your deployment by running:

    ```
    cf login
    ```

1. Target the org and space for the <%= vars.product_short %> app by running:

    ```
    cf target -o ORG -s SPACE
    ```
1. Set an environment variable by running:

    ```
    CF_DOCKER_PASSWORD=DEVCONNECT-REGISTRY-PASSWORD
    ```
      Where `DEVCONNECT-REGISTRY-PASSWORD` is the password for Tanzu Network Registry.
      This is the password you use to log in to <%= vars.product_network %>.

1. Push the <%= vars.product_short %> app by running:

    ```
    cf push -f devconnect-manifest.yml --vars-file devconnect-vars.yml
    ```
